package ${package.Controller};

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import java.util.List;
import javax.annotation.Resource;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};

/**
* @author ${author}
* @since ${date}
*/
@Api("$!{table.comment}" )
@RestController
@RequestMapping("/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end" )
public class ${table.controllerName}  {

  @Resource
  private ${table.serviceName}  ${table.entityPath}Service;

  @ApiOperation("列表" )
  @GetMapping("/list" )
  public ApiResp list(List${entity}Req req) {
    try {
      return ${table.entityPath}Service.list(req);
    } catch (Exception e) {
      log.error("list error",e);
      return new ApiResp().code("500").message("系统繁忙，请稍后再试");
    }
  }

  @ApiOperation("分页" )
  @GetMapping("/page" )
  public ApiResp page(Page${entity}Req req) {
    try {
      return  ${table.entityPath}Service.page(req);
    } catch (Exception e) {
      log.error("page error",e);
      return new ApiResp().code("500").message("系统繁忙，请稍后再试");
    }
  }

  @ApiOperation("获取详情" )
  @GetMapping("/get" )
  public ApiResp get(BaseReq req,#foreach($field in ${table.fields})#if(${field.keyFlag})@RequestParam("${field.propertyName}")${field.propertyType} ${field.propertyName}#end#end) {
    try {
      return  ${table.entityPath}Service.get(#foreach($field in ${table.fields})#if(${field.keyFlag}) ${field.propertyName}#end#end);
    } catch (Exception e) {
      log.error("get error",e);
      return new ApiResp().code("500").message("系统繁忙，请稍后再试");
    }
  }

  @ApiOperation("添加" )
  @PostMapping("/add" )
  public ApiResp add(@RequestBody Add${entity}Req req) {
    try {
      return  ${table.entityPath}Service.add(req);
    } catch (Exception e) {
      log.error("add error",e);
      return new ApiResp().code("500").message("系统繁忙，请稍后再试");
    }
  }

  @ApiOperation("修改" )
  @PostMapping("/modify" )
  public ApiResp modify(@RequestBody Update${entity}Req req) {
    try {
      return  ${table.entityPath}Service.modify(req);
    } catch (Exception e) {
      log.error("modify error",e);
      return new ApiResp().code("500").message("系统繁忙，请稍后再试");
    }
  }

  @ApiOperation("删除" )
  @GetMapping("/delete" )
  public ApiResp delete(BaseReq req,#foreach($field in ${table.fields})#if(${field.keyFlag})@RequestParam("${field.propertyName}")${field.propertyType} ${field.propertyName}#end#end) {
    try {
      return  ${table.entityPath}Service.delete(#foreach($field in ${table.fields})#if(${field.keyFlag}) ${field.propertyName}#end#end);
    } catch (Exception e) {
      log.error("delete error",e);
      return new ApiResp().code("500").message("系统繁忙，请稍后再试");
    }
  }
}